[{"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/features/user/userSlice.js":"1","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/views/Login.js":"2","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/components/Canvas.js":"3","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/views/Landing.js":"4","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/views/Profile.js":"5","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/components/Footer.js":"6","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/index.js":"7","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/services/images.js":"8","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/components/Navbar.js":"9","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/App.js":"10","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/app/store.js":"11"},{"size":1076,"mtime":1637868671593,"results":"12","hashOfConfig":"13"},{"size":12147,"mtime":1637867428343,"results":"14","hashOfConfig":"13"},{"size":7998,"mtime":1637863900036,"results":"15","hashOfConfig":"13"},{"size":6838,"mtime":1637793442635,"results":"16","hashOfConfig":"13"},{"size":6588,"mtime":1637868758282,"results":"17","hashOfConfig":"13"},{"size":4610,"mtime":1637602746421,"results":"18","hashOfConfig":"13"},{"size":775,"mtime":1637776703126,"results":"19","hashOfConfig":"13"},{"size":1017,"mtime":1637865447216,"results":"20","hashOfConfig":"13"},{"size":4085,"mtime":1637863871862,"results":"21","hashOfConfig":"13"},{"size":178,"mtime":1637432526181,"results":"22","hashOfConfig":"13"},{"size":183,"mtime":1637607051820,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"1kasl0b",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/features/user/userSlice.js",["48"],"import {createSlice} from '@reduxjs/toolkit'\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        loggedIn: false,\n        fName: '',\n        lName: '',\n        userName: '',\n        image_url: undefined,\n        userID: 0,\n        userBlurb: undefined\n    },\n    reducers: {\n        setLoggedIn: state =>{\n            state.loggedIn = true\n        },\n        setUserData: (state, action)=>{\n            state.userName = action.payload.username\n            state.image_url = action.payload.avatarsource\n            state.fName = action.payload.realname\n            state.lName = action.payload.lastname\n            state.userID = action.payload.userid\n        },\n        resetUser: (state)=>{\n            state.loggedIn = false\n            state.userName = ''\n            state.image_url = undefined\n            state.fName = ''\n            state.lName = ''\n            state.userID = ''\n            state.userBlurb = undefined\n        }\n    }\n})\n\nexport const { setLoggedIn, setUserData } = userSlice.actions\n\nexport default userSlice.reducer","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/views/Login.js",["49","50"],"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/components/Canvas.js",["51"],"import React, { useEffect, useRef, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport imageService from '../services/images'\nimport Footer from './Footer'\nimport Navbar from './Navbar'\n\nconst start_background_color = \"white\"\nconst undo_array = []\n\nconst Canvas =()=>{\n\n    const canvasRef = useRef(null)\n    const contextRef = useRef(null)\n    const canvasContainer = useRef(null)\n    const [isDrawing, setIsDrawing] = useState(false)\n    const [isReset, setIsReset] = useState()\n    const [savedImages, setSavedImages] = useState([])\n    const [showSaved, setShowSaved] = useState(false)\n    const userID = useSelector(state => state.user.userID)\n\n\n    useEffect(() => {\n        setIsReset(false)\n        const canvas = canvasRef.current;\n        canvas.width = canvasContainer.current.offsetWidth;\n        canvas.height = 400;\n        canvas.style.width = `${canvas.width}px`\n        canvas.style.height = `${canvas.height}px`\n        \n        const context = canvas.getContext(\"2d\")\n\n        context.fillStyle = start_background_color;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        console.log(userID)\n        \n        // context.scale(2,2)\n        context.lineCap = 'round'\n        context.strokeStyle = 'black'\n        context.lineWidth = 5\n        contextRef.current = context\n    }, [isReset])\n\n    const startDrawing =({nativeEvent})=>{\n        const {offsetX, offsetY} = nativeEvent\n        contextRef.current.beginPath()\n        contextRef.current.moveTo(offsetX, offsetY)\n        setIsDrawing(true)\n    }\n\n    const finishDrawing =()=>{\n        \n        setIsDrawing(false)\n        contextRef.current.closePath()\n        undo_array.push(contextRef.current.getImageData(0, 0, 600, 400));\n        console.log(undo_array)\n    }\n\n    const leaveCanvas =()=>{\n        setIsDrawing(false)\n        contextRef.current.closePath()\n    }\n\n    const draw =({nativeEvent})=>{\n        if (!isDrawing){\n            return\n        }\n        const {offsetX, offsetY} = nativeEvent\n        contextRef.current.lineTo(offsetX, offsetY)\n        contextRef.current.stroke()\n    }\n\n    const colorPicker =(evt)=>{\n        contextRef.current.strokeStyle = evt.target.value\n    }\n    \n    const penSize=(evt) =>{\n        contextRef.current.lineWidth = evt.target.value\n    }\n\n    const clearDrawing=(e)=>{\n        e.preventDefault()\n        setIsReset(true)\n    }\n\n    const undoLast = (evt) =>{\n        evt.preventDefault()\n        undo_array.pop();\n        if(undo_array.length > 0){\n            \n            contextRef.current.putImageData(undo_array[undo_array.length-1], 0, 0);\n            console.log(undo_array)\n        }\n        if(undo_array.length === 0){\n            clearDrawing(evt)\n        }\n    }\n\n    const setEraser = (evt) =>{\n        evt.preventDefault()\n        contextRef.current.strokeStyle = start_background_color\n    }\n\n    const saveImages =(evt)=>{\n        console.log(savedImages)\n        evt.preventDefault()     \n        \n        let canvas = canvasRef.current\n        let newSavedImage = canvas.toDataURL()\n        savedImages ? setSavedImages([...savedImages, {drawing_src: newSavedImage}]) : setSavedImages([{drawing_src: newSavedImage}])\n        console.log(userID)\n        imageService.addImage({\n            drawing_src: `${newSavedImage}`,\n            userid: userID\n        })\n    }\n\n    const _handleGallery =(evt) =>{\n        evt.preventDefault()\n        showSaved ? setShowSaved(false) : setShowSaved(true)\n        imageService\n            .getAllImages({\n              userId: userID\n            })\n            .then(data => {\n                // console.log(data)\n                setSavedImages(data.images)\n        })\n    }\n\n    return (\n        <>\n            <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\"\n            >\n                <Navbar draw />\n                <div className=\"canvas-holder rounded\" ref={canvasContainer} >\n                \n                    <h1 class=\"text-6xl font-normal leading-normal mt-0 mb-2 text-black-800\">\n                        Let's Draw\n                    </h1>\n                    <canvas\n                        onMouseDown={startDrawing}\n                        onMouseUp={finishDrawing}\n                        onMouseMove={draw}\n                        onMouseLeave={leaveCanvas}\n                        onTouchStart={startDrawing}\n                        onTouchEnd={finishDrawing}\n                        onTouchMove={draw}\n                        ref={canvasRef}\n                        className=\"canvas-screen\"\n                        \n                    />\n                    \n                    <div className=\"button-bar\">\n                        <input onInput={(evt)=>colorPicker(evt)} type=\"color\" className=\"rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" ></input>\n                        <input onChange={(evt)=>penSize(evt)} type=\"range\" min=\"1\" max=\"100\" class=\"pen-range\" step=\"1\" id=\"range\"></input>\n                        \n                        <button onClick={(evt)=>setEraser(evt)} type=\"button\" className=\"bg-lightBlue-500 text-white active:bg-lightBlue-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" ><i className=\"fas fa-eraser\"/></button>\n                        <button onClick={(e)=>undoLast(e)} type=\"button\" className=\"bg-lightBlue-500 text-white active:bg-lightBlue-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"><i className=\"fas fa-undo\"/></button>\n                        <button onClick={(e)=>clearDrawing(e)} type=\"button\" className=\"bg-red-500 text-white active:bg-lightBlue-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"><i className=\"fas fa-trash-alt\"/></button>\n                        \n                        <button onClick={(e)=>saveImages(e)} type=\"button\" className=\"bg-lightBlue-500 text-white active:bg-lightBlue-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"><i className=\"fas fa-save\"/></button>\n                        {/* <button onClick={(e)=>loadImage(e)} type=\"button\" className=\"button\"><i className=\"fas fa-load\"/></button> */}\n                    </div>\n                    <div className=\"gallery\">\n                        <button \n                            className=\"bg-indigo-500 text-white active:bg-indigo-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" \n                            type=\"button\"\n                            onClick={(evt)=>_handleGallery(evt)}\n                        >\n                            <i className=\"fas fa-images\"></i>\n                            Gallery\n                        </button>\n                        {showSaved ? \n                            <div className=\"saved-images\">\n                                {savedImages ? \n                                    savedImages.map((image, key)=>(\n                                        <a className=\"drawing\" href={image.drawing_src} target=\"_blank\" rel=\"noreferrer\">\n                                            <img key={key} alt='saved drawing' src={image.drawing_src}></img>\n                                        </a>\n                                    ))\n                                    :null\n                                }\n                            </div>\n                            : null\n                        }\n                    </div>\n                </div> \n            </div>\n            <Footer />\n        </>\n    )\n}\n\nexport default Canvas","/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/views/Landing.js",[],"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/views/Profile.js",["52"],"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/components/Footer.js",["53","54","55","56"],"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/index.js",[],"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/services/images.js",["57"],"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/components/Navbar.js",["58"],"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/App.js",[],"/Users/ericschorling/Desktop/heroku-deployment/deploying-fullstack-with-heroku-sample/client/src/app/store.js",[],{"ruleId":"59","severity":2,"message":"60","line":32,"column":31,"nodeType":"61","messageId":"62","endLine":32,"endColumn":35},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"61","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"66","line":11,"column":9,"nodeType":"61","messageId":"65","endLine":11,"endColumn":17},{"ruleId":"67","severity":1,"message":"68","line":41,"column":8,"nodeType":"69","endLine":41,"endColumn":17,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":9,"column":9,"nodeType":"61","messageId":"65","endLine":9,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":40,"column":47,"nodeType":"74","endLine":40,"endColumn":62},{"ruleId":"72","severity":1,"message":"73","line":49,"column":53,"nodeType":"74","endLine":49,"endColumn":68},{"ruleId":"72","severity":1,"message":"73","line":57,"column":59,"nodeType":"74","endLine":57,"endColumn":74},{"ruleId":"72","severity":1,"message":"73","line":65,"column":58,"nodeType":"74","endLine":65,"endColumn":73},{"ruleId":"75","severity":1,"message":"76","line":41,"column":3,"nodeType":"77","endLine":41,"endColumn":70},{"ruleId":"63","severity":1,"message":"78","line":3,"column":23,"nodeType":"61","messageId":"65","endLine":3,"endColumn":34},"no-undef","'unde' is not defined.","Identifier","undef","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'loggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'imageUrl' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useDispatch' is defined but never used.",{"desc":"80","fix":"81"},"Update the dependencies array to be: [isReset, userID]",{"range":"82","text":"83"},[1335,1344],"[isReset, userID]"]